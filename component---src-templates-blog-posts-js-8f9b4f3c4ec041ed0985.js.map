{"version":3,"sources":["webpack:///./src/templates/blog/Posts.js"],"names":["Post","data","to","src","logo","alt","width","start","blog","pageInfo","currentPage","perPage","posts","map","post","key","id","fields","page","path","Date","revision","date","toDateString","document","title","pageAttributes","category","hasPreviousPage","pageCount","hasNextPage"],"mappings":"2FAAA,oFAIe,SAASA,EAAT,GAAuB,IAARC,EAAO,EAAPA,KAC5B,OACE,oCACE,6BACE,4BACE,4BAAI,kBAAC,IAAD,CAAMC,GAAG,KAAI,yBAAKC,IAAKF,EAAKG,KAAKD,IAAKE,IAAI,uBAAuBC,MAAM,cAI/E,0CAEA,wBAAIC,OAAQN,EAAKO,KAAKC,SAASC,YAAc,GAAKT,EAAKO,KAAKC,SAASE,QAAU,GAC5EV,EAAKO,KAAKI,MAAMC,KAAI,SAAAC,GAAI,OACvB,wBAAIC,IAAKD,EAAKE,IACZ,kBAAC,IAAD,CAAMd,GAAIY,EAAKG,OAAOC,KAAKC,MACzB,gCACG,IAAIC,KAAKN,EAAKO,SAASC,MAAMC,eAC9B,4BAAKT,EAAKU,SAASC,OAClBX,EAAKY,eAAeC,gBAO/B,6BACE,4BACG1B,EAAKO,KAAKC,SAASmB,gBACf,4BAAI,kBAAC,IAAD,CAAM1B,GAAuC,IAAnCD,EAAKO,KAAKC,SAASC,YAAoB,cAAvC,gBAAsET,EAAKO,KAAKC,SAASC,YAAc,IAAM,OAC5H,GAEJ,oCAAUT,EAAKO,KAAKC,SAASC,YAA7B,OAA8CT,EAAKO,KAAKC,SAASoB,WAChE5B,EAAKO,KAAKC,SAASqB,YACf,4BAAI,kBAAC,IAAD,CAAM5B,GAAE,gBAAiBD,EAAKO,KAAKC,SAASC,YAAc,IAAM,OACrE","file":"component---src-templates-blog-posts-js-8f9b4f3c4ec041ed0985.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nexport default function Post({data}) {\n  return (\n    <>\n      <nav>\n        <ul>\n          <li><Link to=\"/\"><img src={data.logo.src} alt=\"origami.network logo\" width=\"100px\" /></Link></li>\n        </ul>\n      </nav>\n\n      <h1>Blog Posts</h1>\n\n      <ol start={(data.blog.pageInfo.currentPage - 1) * data.blog.pageInfo.perPage + 1}>\n        {data.blog.posts.map(post => (\n          <li key={post.id}>\n            <Link to={post.fields.page.path}>\n              <header>\n                {new Date(post.revision.date).toDateString()}\n                <h3>{post.document.title}</h3>\n                {post.pageAttributes.category}\n              </header>\n            </Link>\n          </li>\n        ))}\n      </ol>\n\n      <nav>\n        <ul>\n          {data.blog.pageInfo.hasPreviousPage\n            ? (<li><Link to={data.blog.pageInfo.currentPage === 2 ? \"/blog/posts\" : `/blog/posts/${data.blog.pageInfo.currentPage - 1}`}>{\"<<\"}</Link></li>)\n            : \"\"\n          }\n          <li>page {data.blog.pageInfo.currentPage} of {data.blog.pageInfo.pageCount}</li>\n          {data.blog.pageInfo.hasNextPage\n            ? (<li><Link to={`/blog/posts/${data.blog.pageInfo.currentPage + 1}`}>{\">>\"}</Link></li>)\n            : \"\"\n          }\n        </ul>\n      </nav>  \n    </>\n  );\n};\n\nexport const query = graphql`\n  query($skip: Int!, $limit: Int!) {\n    logo: file(relativePath: { eq: \"logo.svg\" }) {\n      src: publicURL\n    }\n    blog: allAsciidoc(\n      filter: {pageAttributes: {type: {eq: \"blog\"}}},\n      sort: {order: DESC, fields: revision___date},\n      skip: $skip, limit: $limit, \n    ) {\n      posts: nodes {\n        id\n        document {\n          title\n        }\n        revision {\n          date\n        }\n        fields {\n          page {\n            path\n          }\n        }\n        pageAttributes {\n          category\n        }\n      }\n      pageInfo {\n        currentPage\n        perPage\n        pageCount\n        hasNextPage\n        hasPreviousPage\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}