{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["data","href","to","src","logo","alt","blog","pageInfo","totalCount","posts","map","post","key","id","fields","page","path","Date","revision","date","toDateString","document","title","pageAttributes","category"],"mappings":"2FAAA,mCAIe,sBAAe,IAAZA,EAAW,EAAXA,KAChB,OACE,4BACE,gDACA,0CAEA,2CACA,iEAIA,4CACA,wDAC8B,qBAAGC,KAAK,6BAAR,aAD9B,kBAEc,gBAAC,IAAD,CAAMC,GAAG,QAAT,mBAFd,KAKA,2CACA,yDACA,uBAAKC,IAAKH,EAAKI,KAAKD,IAAKE,IAAI,yBAC7B,mFAIA,4CACA,kCAC2C,IAAlCL,EAAKM,KAAKC,SAASC,WAAmB,KAAO,MADtD,IAC8DR,EAAKM,KAAKC,SAASC,WADjF,aACyI,IAAlCR,EAAKM,KAAKC,SAASC,WAAmB,GAAK,IADlJ,qBAIA,0BACGR,EAAKM,KAAKG,MAAMC,KAAI,SAAAC,GAAI,OACvB,sBAAIC,IAAKD,EAAKE,IACZ,gBAAC,IAAD,CAAMX,GAAIS,EAAKG,OAAOC,KAAKC,MACzB,8BACG,IAAIC,KAAKN,EAAKO,SAASC,MAAMC,eAC9B,0BAAKT,EAAKU,SAASC,OAClBX,EAAKY,eAAeC,gBAM/B,oCACU,gBAAC,IAAD,CAAMtB,GAAG,eAAT,cADV","file":"component---src-pages-index-js-c1a362fb0fbddf62ba92.js","sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { graphql } from \"gatsby\"\n\nexport default ({ data }) => {\n  return (\n    <main>\n      <title>origami.network</title>\n      <h1>Hello world!</h1>\n\n      <h2>First success</h2>\n      <p>\n        The page has build process in place!\n      </p>\n\n      <h2>Second success</h2>\n      <p>\n        The page is generated using <a href=\"https://www.gatsbyjs.com/\">gatsby.js</a>!.\n        It has also <Link to=\"/404\">404 status page</Link>.\n      </p>\n\n      <h2>Third success</h2>\n      <p>The page has logo and quote.</p>\n      <img src={data.logo.src} alt=\"origami.network logo\" />\n      <blockquote>\n        origami.network - the art of software folding\n      </blockquote>\n\n      <h2>Fourth success</h2>\n      <p>\n        There {data.blog.pageInfo.totalCount === 1 ? \"is\" : \"are\"} {data.blog.pageInfo.totalCount} blog post{data.blog.pageInfo.totalCount === 1 ? \"\" : \"s\"}.\n        See the latest.\n      </p>\n      <ol>\n        {data.blog.posts.map(post => (\n          <li key={post.id}>\n            <Link to={post.fields.page.path}>\n              <header>\n                {new Date(post.revision.date).toDateString()}\n                <h3>{post.document.title}</h3>\n                {post.pageAttributes.category}\n              </header>\n            </Link>\n          </li>\n        ))}\n      </ol>\n      <p>\n        See all <Link to=\"/blog/posts\">blog posts</Link>.\n      </p>\n    </main>\n  )\n}\n\nexport const query = graphql`\n  query {\n    logo: file(relativePath: { eq: \"logo.svg\" }) {\n      src: publicURL\n    }\n    blog: allAsciidoc(filter: {pageAttributes: {type: {eq: \"blog\"}}}, sort: {order: DESC, fields: revision___date}, limit: 5) {\n      posts: nodes {\n        id\n        document {\n          title\n        }\n        revision {\n          date\n        }\n        fields {\n          page {\n            path\n          }\n        }\n        pageAttributes {\n          category\n        }\n      }\n      pageInfo {\n        totalCount\n      }\n    }\n  }`\n"],"sourceRoot":""}